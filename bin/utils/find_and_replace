#!/bin/bash

# Find and replace recursively (ignores .git folder)
# Ref: https://stackoverflow.com/a/1583282

DIR=$1
SEARCH=$2
REPLACE=$3
FILTER=$4

usage() {
  echo ${0}
  echo
  echo "USAGE: <required> [optional]"
  echo "$(basename -- ${0}) <dir> <search-pattern> <replace> [filter]"
  echo
}

ok() {
  echo
  echo "Done! All '${SEARCH}' has been replaced with '${REPLACE}' within '${DIR}' directory"
}

error() {
  message=$1
  [[ -n ${message} ]] && echo ${message}
  exit 1
}

if [[ $# -lt 3 ]] || [[ $# -gt 4 ]]; then
  echo "[ERROR] Invalid arguements."
  usage && exit 1
fi

if [[ ! -d ${DIR} ]]; then
  echo "[ERROR] No such \"${DIR}\" directory exist."
  exit 1
fi

# Print all files to be changed before replacing
echo "Possible affected files..."
echo
if [[ -n ${FILTER} ]]; then
  find ${DIR} \( -type d -name .git -prune \) -o -type f -name ${FILTER}
else
  find ${DIR} \( -type d -name .git -prune \) -o -type f
fi

# Print args
echo "Do you wish to continue? (Y/y)"
echo
echo "ARGS"
echo "  - Target Directory  = '${DIR}'"
echo "  - Search Pattern    = '${SEARCH}'"
echo "  - Replace With      = '${REPLACE}'"
echo "  - Filter (optional) = '${FILTER}'"

# Confirmation
confirm "Do you wish to continue? (Y/y) "
if [[ "${?}" -eq 1 ]]; then
  error "Aborted."
elif [[ "${?}" -eq 2 ]]; then
  error "Unsupported shell"
else
  echo "Executing..."
fi

# Execute then print changes with rg
if [[ -n ${FILTER} ]]; then
  find ${DIR} \( -type d -name .git -prune \) -o -type f -name ${FILTER} -print0 | xargs -0 sed -i "s|${SEARCH}|${REPLACE}|g" && \
    rg "${REPLACE}" --glob "!.git*" -g ${FILTER} &&
    ok || error
else
  find ${DIR} \( -type d -name .git -prune \) -o -type f -print0 | xargs -0 sed -i "s|${SEARCH}|${REPLACE}|g" && \
    rg "${REPLACE}" --glob "!.git*" && \
    ok || error
fi

