# Config Resources and Ideas:
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# https://github.com/nickjj/dotfiles/blob/master/.tmux.conf
# https://github.com/srydell/dotfiles/blob/master/tmux/.tmux.conf

# ======================================================================
# Basic Configs
# ======================================================================

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Stop renaming windows automatically
setw -g automatic-rename off

# Automatically renumber windows upon deletion
set-option -g renumber-windows on

# Set default shell
set-option -g default-shell "/usr/bin/zsh"

# Add a bit more scroll history in the buffer.
set-option -g history-limit 50000

# Start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Resize panes immediately for all clients
set-window-option -g aggressive-resize on

# Allow Vim's FocusGained to work when your terminal gains focus.
# Requires Vim plugin: https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# Ensures vim mappings still works inside a tmux session
setw -g xterm-keys on

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# ======================================================================
# Display
# ======================================================================

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Neovim recommended settings
set-option -sg escape-time 10
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

# ======================================================================
#  Mappings
# ======================================================================

# remap prefix from 'C-b' to 'C-space'
unbind C-b
set-option -g prefix 'C-space'

# Use C-space in other programs by using it twice
bind-key 'C-space' send-prefix

# Split pane
bind-key - split-window -v
bind-key '\' split-window -h

# Split panes and do retain the current directory of existing pane
bind-key C-v split-window -h -c "#{pane_current_path}"
bind-key C-h split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Toggles status line visibility
bind-key s set-option -g status

# Shortcut to synchronize panes toggle
bind-key S set-window-option synchronize-panes

# Enable vi keys in copy mode
set-window-option -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Smart pane switching with awareness of Vim splits.
# True if current pane is running vim

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Pipenv/subshell workaround
# Solution 1: https://github.com/RobbieClarken/dotfiles/commit/c1a8e28e46e4b0d26f6778e11fec3cea16e526e1
# Solution 2: https://gist.github.com/akselsjogren/35aec0af39e53319e12a3e1432da4d4e
is_vim="~/.tmux/vim_tmux_pipenv_workaround.sh #{pane_tty}"

# True if current pane is running fzf
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# Movement integration between vim and tmux splits
# Move to panes with vim keys as ctrl followed by hjkl
# Relies on vim plugin 'christoomey/vim-tmux-navigator'
bind-key -n M-h run "($is_vim && tmux send-keys M-h) || \
                 tmux select-pane -L"

bind-key -n M-j run "($is_vim && tmux send-keys M-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind-key -n M-k run "($is_vim && tmux send-keys M-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind-key -n M-l run "($is_vim && tmux send-keys M-l) || \
                tmux select-pane -R"

bind-key -n 'M-\' if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# Restore <Ctrl-l> clear-screenn functionality
# bind C-l send-keys 'C-l'

# Reload config file with r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Paste buffer with P
unbind P
bind-key P paste-buffer

# Switch panes with h, j, k, l
# bind-key h select-pane -L
# bind-key j select-pane -D
# bind-key k select-pane -U
# bind-key l select-pane -R

# Resize panes with HJKL
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Switch window multiple times after only one prefix send (-r option)
bind-key -r n select-window -t :+
bind-key -r p select-window -t :-

# Cycle through panes in current window
bind-key C-n swap-pane -s :+.top \; rotate-window -Ut :+
bind-key C-p swap-pane -s :+.bottom \; rotate-window -Dt :+

# Remap zoom current pane
bind-key C-f resize-pane -Z
# Automatically hide statusline when zoomed. Works with vim Goyo
# Ref: https://gist.github.com/bartj3/6d3bd8efd2ceaf02d443
set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"set -g status off\" \"set -g status on\""

# alt+shift+key
bind-key -n M-L next-window
bind-key -n M-H previous-window
bind-key -n M-J choose-session -Z
bind-key -n M-K choose-tree -Z

# ======================================================================
#  Plugins
# ======================================================================
# Plugin Manager - https://github.com/tmux-plugins/tpm
# In order to use the plugins below you need to install TPM and the plugins.
#   1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#      (automated below)
#   2) Reload tmux if it's already started with `prefix + r`
#   3) Launch tmux and hit `prefix + I` to fetch and install plugins.
#
# To install plugins            `prefix + I`
# To update plugins             `prefix + u`
# To update selected plugin(s)  `prefix + U`
# To remove/uninstall plugins   `prefix + alt + u`
# ----------------------------------------------------------------------

# Plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'fcsonline/tmux-thumbs'

# --------------------------------------------------
# Prefix Highlight Config
# --------------------------------------------------

# General
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_empty_has_affixes 'on' # default is 'off'
set -g @prefix_highlight_empty_prompt 'T'

# Prefix highlight
set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'colour04'  # default is 'colour04'
set -g @prefix_highlight_prefix_prompt 'W'

# Copy mode highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_copy_prompt 'Copy'

# --------------------------------------------------
# Tmux-thumbs
# --------------------------------------------------
# prefix + space

set -g @thumbs-command 'echo -n {} | xclip -in -selection clipboard && tmux set-buffer -- {} && tmux display-message "Copied {}"'
set -g @thumbs-upcase-command 'echo -n {} | xclip -in -selection clipboard && tmux set-buffer -- {} && tmux display-message "Copied {}"'

# --------------------------------------------------
# Yank Config
# --------------------------------------------------
# Normal Mode
#   prefix + y  Yank current line
#   prefix + Y  Yank pwd
# Copy Mode
#   y           copy selection to system clipboard
#   Y           copy a selection, and pasting to the command line.

# Remain in copy mode after yanking
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default
set -g @override_copy_command 'xclip -in -selection clipboard'
# Mouse yank copies to clipboard
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'


# ======================================================================
# Colorscheme
# ======================================================================

# Ref:
# https://gist.github.com/rajanand02/9407361
# https://tech.serhatteker.com/post/2019-06/tmux-focus/

# Active-inactive window styles
# set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=default,bg=colour234'

# Default window styles
set -g window-style 'fg=default,bg=default'
# set -g window-active-style 'fg=default,bg=default'

# Pane border style
set -g pane-border-style fg=default,bg=default
set -g pane-active-border-style fg=cyan,bg=default

set -g message-command-style fg=black,bg=cyan
set -g message-style fg=black,bg=cyan,bold
set -g status-justify 'centre'
set -g status 'on'
set -g status-left-length 100
set -g status-right-length 100
set -g status-style fg=colour244,bg=colour235
setw -g window-status-separator ''
setw -g window-status-format ' #I #W '
setw -g window-status-style bg=colour235
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=cyan,bg=colour238,bold] #I #W #[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]'
setw -g window-status-current-style fg=colour223,bg=default,bold

# Status-right integration with gtd: https://github.com/connermcd/gtd
# spotifycli: https://github.com/pwittchen/tmux-plugin-spotify
# Uptime ref: https://stackoverflow.com/a/28353785
set -g status-left '#[fg=colour235,bg=cyan,bold] #S #[fg=cyan,bg=colour238,nobold,nounderscore,noitalics]#[fg=cyan,bg=colour238] #W#{?window_zoomed_flag, ,} #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour244,bg=colour235] #(cat /tmp/gtd-tmux) #[fg=colour244]'
set -g status-right ' #{prefix_highlight} #[fg=colour244,bg=colour235] %H:%M %m/%d %a #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=cyan,bg=colour238] #(whoami) #[fg=cyan,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour235,bg=cyan]  #{spotify_song} '

# WSL Statusline (Override)
run -b "~/.tmux/wsl_tmux_statusline.sh"

# ======================================================================
# Initialize TPM (keep this line at the very bottom of your tmux.conf).
# ======================================================================
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.tmux/plugins/tpm/tpm'
