#!/usr/bin/env bash

set -o pipefail
set -o nounset

DEBUG=false

function _main() {
  local -a _essentials=(
    "build-essential"
    "libffi-dev"
    "libssl-dev"
    "net-tools"
    "-c cmake cmake"
    "-c curl curl"
    "-c wget wget"
    "-c zip zip"
    "-c unzip unzip"
    "-c unar unar"
    "-c git git"
    "-d git -c git-lfs git-lfs"
    "-c gpg gnupg"
    "-c gpg2 gnupg2"
    "-c shc shc"
    "-c gcc gcc"
  )

  local -a _languages=(
    # Python
    "python3-venv"
    "-c python python"
    "-c python2 python2"
    "-c python2 python2-dev"
    "-c python3 python3"
    "-c python3 python3-dev"
    "-c pip3 python3-pip"
    # Java
    "default-jre"
    "default-jdk"
    "openjdk-8-jdk"
    "openjdk-8-jre"
    "openjdk-11-jdk"
    "openjdk-11-jre"
    "openjdk-13-jdk"
    "openjdk-13-jre"
    "-c mvn maven"
    # R
    "-c R r-base"
    # C++
    "-c ccls ccls"
  )

  local -a _package_manager=(
    "-m npm -d nodejs -c browser-sync browser-sync"
    "-m npm -d nodejs -c gulp gulp-cli"
    "yarn"
    "-m curl -n nvm -e -o '~/.nvm' -c nvm -- https://raw.githubusercontent.com/creationix/nvm/master/install.sh"
    "-m local -c node nodejs"
    "-m curl -n cargo -e -c cargo -- https://sh.rustup.rs"
    "-m curl -n nix -e -c nix -- https://nixos.org/nix/install"
  )

  local -a _shell=(
    "zsh"
    "-m curl -d zsh -n oh-my-zsh -e -- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
    "-m git -a '--depth=1' -d oh-my-zsh -n zsh-autosuggestions -o '\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions' -- 'https://github.com/zsh-users/zsh-autosuggestions'"
    "-m git -a '--depth=1' -d oh-my-zsh -n zsh-syntax-highlighting -o '\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting' -- 'https://github.com/zsh-users/zsh-syntax-highlighting.git'"
    "-m git -a '--depth=1' -d oh-my-zsh -n powerlevel10k -o '~/.oh-my-zsh/themes/powerlevel10k' -- 'https://github.com/romkatv/powerlevel10k.git'"
  )

  local -a _session_manager=(
    "-c tmux tmux"
    "-c tmuxinator tmuxinator"
    "-c gawk gawk"
    "-c urlview urlview"
    "-m pip -d python -c spotifycli spotify-cli-linux"
    "-m pip2 -d python2 -c spotifycli spotify-cli-linux"
    "-m pip3 -d python3 -c spotifycli spotify-cli-linux"
    "-m git -a '--depth=1' -d tmux -n tpm -o '~/.tmux/plugins/tpm' 'https://github.com/tmux-plugins/tpm'"
  )

  local -a _file_manager=(
    "-c ranger ranger"
    "-m git -a '--depth=1' -n ranger_devicons -o '~/.config/ranger/plugins/ranger_devicons' 'https://github.com/alexanderjeurissen/ranger_devicons'"
    "caca-utils"
    "-c highlight highlight"
    "-c atool atool"
    "-c w3m w3m"
    "w3m-img"
    "-c zathura zathura"
    "-c xdotool xdotool"
    "poppler-utils"
    "-c mediainfo mediainfo"
    "-c mupdf mupdf"
    "mupdf-tools"
  )

  local -a _text_editor=(
    "-c nvim neovim"
    "-m apt-add -n neovim-unstable ppa:neovim-ppa/unstable"
    "-m apt -d neovim-unstable.apt-add -n neovim-unstable -c nvim neovim"
    "-m npm -d nodejs,neovim neovim"
    "-m npm -d nodejs eslint"
    "-m npm -d nodejs stylelint"
    "-m npm -d nodejs prettier"
  )

  local -a _tools=(
    "-c tree tree"
    "-c xclip xclip"
    "-c xdg-open xdg-utils"
    "-c fdfind fd-find"
    "-c mlocate mlocate"
    "-c autojump autojump"
    "-c rg ripgrep"
    "-c neofetch neofetch"
    "-c htop htop"
    "-c neomutt neomutt"
    "-c trash-put trash-cli"
    "-c task taskwarrior"
    "-c timew timewarrior"
    "-m git -a '--recursive -b stable' -n 'taskwarrior' -c task -- 'https://github.com/GothenburgBitFactory/taskwarrior'"
    "-m git -a '--recursive' -c task -n 'timewarrior' -c timew -- 'https://github.com/GothenburgBitFactory/timewarrior'"
    "-m curl -n rclone -e -- https://rclone.org/install.sh"
    "-m git -a '--depth=1' -n fzf -o '~/.fzf' -c fzf -- 'https://github.com/junegunn/fzf.git'"
    # Python packages
    "-m pip -d python wheel"
    "-m pip -d python -c pipenv pipenv"
    "-m pip -d python -c virtualenv virtualenv"
    "-m pip -d python -c send2trash Send2Trash"
    "-m pip -d python -c trash-put trash-cli"
    "-m pip2 -d python2 wheel"
    "-m pip2 -d python2 -c pipenv pipenv"
    "-m pip2 -d python2 -c virtualenv virtualenv"
    "-m pip2 -d python2 -c send2trash Send2Trash"
    "-m pip2 -d python2 -c trash-put trash-cli"
    "-m pip3 -d python3 wheel"
    "-m pip3 -d python3 -c pipenv pipenv"
    "-m pip3 -d python3 -c virtualenv virtualenv"
    "-m pip3 -d python3 -c send2trash Send2Trash"
    "-m pip3 -d python3 -c trash-put trash-cli"
  )

  local -a _browser=(
    "-c firefox firefox"
  )

  local -a _server=(
    "apache2"
    "apache2-utils"
    "-c sqlite3 sqlite3"
    "libsqlite3-dev"
    "-c sqlitebrowser sqlitebrowser"
  )

  local -a _virtualization=(
    "-c docker docker"
    # Docker dependencies
    "ca-certificates"
    "-c lsb-release lsb-release"
    "-m apt -d docker-ce-cli,containerd.io -n docker-stable -c docker -u -- docker-ce"
    "-m apt -d ca-certificates,curl,gnupg,lsb-release docker-ce-cli"
    "containerd.io"
  )

  local -a _misc=(
    "-c colordiff colordiff"
    "-c cmatrix cmatrix"
    "-c cowsay cowsay"
    "-c xcowsay xcowsay"
    "-c figlet figlet"
    "-c lolcat lolcat"
    "-c fortune fortune"
    "-c sl sl"
    "-c sysbench sysbench"
    "-c stress stress"
    "-c inotify-tools inotify-tools"
    "-c bat bat"
    "-c pandoc pandoc"
    "-d pandoc pandoc-data"
    "-d pandoc texlive"
    "-m apt-add -n bashtop ppa:bashtop-monitor/bashtop"
    "-m apt -d bashtop.apt-add -c bashtop bashtop"
    "-m apt-add -n lazygit ppa:lazygit-team/release"
    "-m apt -d lazygit.apt-add -c lazygit lazygit"
    "-c exa exa"
  )

  local -a _test=(
    "-m apt test1"
    "-m npm test1"
    "-m curl -n test1 test1"
    "-m git -n test1 test1"

    "-d test1 -m apt test1-1"
    "-d test1 -m npm test1-1"
    "-d test1 -m curl -n test1-1 test1-1"
    "-d test1 -m git -n test1-1 test1-1"

    "-d test1-1 -m apt test1-2"
    "-d test1-1 -m npm test1-2"
    "-d test1-1 -m curl -n test1-2 test1-2"
    "-d test1-1 -m git -n test1-2 test1-2"

    "-d test1-2 -m apt test1-3"
    "-d test1-2 -m npm test1-3"
    "-d test1-2 -m curl -n test1-3 test1-3"
    "-d test1-2 -m git -n test1-3 test1-3"

    "-m local test2"
    "-m local -d test2 test2-a"
    "-m local -d test2-a test2-a-i"
    "-m local -d test2-a-i test2-a-i-1"
    "-m local -d test2-a-i-1 test2-a-i-1-a"

    "-m local test3"
    "-m local -d test3.local test3-a"
    "-m local -d test3-a.local test3-a-1"
    "-m local -d test3-a.local test3-a-2"
    "-m local -d test3-a-1.local,test3-a-2.local test3-a-2-i"
    "-m local -d test3-a-2-i.local test3-a-2-ii"
    "-m local -d test3-a-2-ii.local test3-b"
    "-m local -d test3-b.local test3-b-1"
    "-m local -d test3-b.local test3-b-2"
    "-m local -d test3-b.local test3-b-3"
    "-m local -d test3-b-1.local,test3-b-2.local,test3-b-3.local test3-b-3-i"

    "-m local test4"
    "-m local -d test4 test4-a"
    "-m local -d test4 test4-b"
    "-m local -d test4-a,test4-b test4-b-1"

    "test5-a"
    "test5-b"
    "test5-c"
    "test5-d"
    "test5-e"
    "-d test5-a,test5-b,test5-c,test5-d,test5-e test5"
  )


  local -a packages=(
    "${_essentials[@]}"
    "${_languages[@]}"
    "${_package_manager[@]}"
    "${_shell[@]}"
    "${_session_manager[@]}"
    "${_file_manager[@]}"
    "${_text_editor[@]}"
    "${_tools[@]}"
    "${_browser[@]}"
    "${_server[@]}"
    "${_virtualization[@]}"
    "${_misc[@]}"
  )

  # local -a packages=(
  #   "${_test[@]}"
  # )

  local template_args=
  $DEBUG && template_args+="--debug "

  for package in "${packages[@]}"; do
    ez-gen --global --skip-confirm --skip-edit ${template_args} "${package}"
  done
}

res=0
_main
res=$?

unset VERBOSE
unset DEBUG
unset SCRIPT_DIR
unset PACKAGE_DIR

exit $res
